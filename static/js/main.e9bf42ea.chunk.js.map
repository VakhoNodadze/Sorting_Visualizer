{"version":3,"sources":["helpers/utils.tsx","algorithms/InsertionSort.tsx","algorithms/QuickSort.tsx","styled/themes.tsx","components/primitives/Bar/Bar.tsx","components/primitives/Flex/Flex.tsx","components/primitives/Flex/index.tsx","components/Sorter.tsx","components/SortInfo.tsx","components/Colors.tsx","components/ProgressBar.tsx","components/primitives/Button/styled.tsx","components/primitives/Button/index.tsx","components/primitives/Button/Button.tsx","components/primitives/Select/styled.tsx","components/primitives/Select/Select.tsx","components/primitives/Icons/Play.tsx","components/primitives/Icons/Pause.tsx","components/primitives/Icons/Forwards.tsx","components/primitives/Icons/Backwards.tsx","components/primitives/Icons/styled.tsx","components/primitives/Icons/IconItem.tsx","components/SortController.tsx","styled/global.tsx","Main.tsx","index.tsx"],"names":["newTrale","array","groupA","groupB","groupC","groupD","sortedIndices","addToTrale","trale","push","createKey","InsertionSortKey","InsertionSortDesc","title","description","href","target","rel","worstCase","avgCase","bestCase","space","InsertionSort","nums","i","length","value","hole","Array","keys","QuickSortKey","QuickSortDesc","breakpoints","xs","sm","md","lg","xl","grid","containerMaxWidth","gutterWidth","colCount","spacing","noSpacing","tiny","mini","small","default","big","large","extraLarge","huge","extraHuge","padding","sizes","dwarf","fonts","regular","bold","fontSizes","body","lineHeights","h1","h2","h3","h4","body2","caption","borderRadius","circular","rounded","margin","lightTheme","mode","colors","white","black","gray000","gray100","gray200","gray300","gray400","yello000","yellow100","yellow200","yellow300","yello400","pink","red000","themeColors","blackWhite","whiteBlack","primaryBg","secondaryBg","primaryTxt","primaryTxt2","activeTxt","primaryIcons","sidebarBorder","chartRedBorder","chartRedBg","chartBg","chartBtnBgAct","chartBtnBgDis","chartBtnAct","chartBtnDis","chartBtnCol","toggler","btnBg","darkTheme","styled","baseStyled","Bar","width","val","stateA","stateB","stateC","stateD","sorted","BarContainer","state","height","Text","div","props","span","direction","row","column","wrap","noWrap","justify","center","between","around","evenly","start","end","alignContent","align","Flex","inline","css","full","flex","position","hide","getListOfBars","numbers","maxNum","map","num","includes","withTheme","theme","style","backgroundColor","SortInfo","bg","className","ColorsInfo","colorA","StyledKeyItem","StyledBox","group","colorB","colorC","colorD","StyledContainer","ProgressBar","StyledProgress","button","fontSize","size","Button","children","onClick","fluid","rest","Selector","select","Option","option","Select","options","isActive","onChange","defaultValue","selected","label","defaultProps","disabled","color","xmlns","maxHeight","fill","cursor","d","IconItem","name","activeColor","defaultColor","Icon","icons","useState","isHovered","setIsHovered","onMouseEnter","onMouseLeave","BAR_NUMBERSS","SPEED","ALGORITHMS","SortController","randomizeArray","setState","traleStep","originalArray","animate","currentState","clearTimeouts","timeouts","forEach","timeout","clearTimeout","run","timer","playbackSpeed","item","setTimeout","prevState","pause","continue","slice","stepForward","step","stepBackward","handleSpeedChange","sorting","handleClick","prevProps","this","setTheme","generateNewArray","startedProgress","moveForwardDisabled","moveBackwardDisabled","StateContext","Consumer","context","Math","max","display","flexDirection","marginRight","alignItems","e","changeAlgorithm","barNumber","handleBarChange","Number","top","right","Colors","Component","Container","GlobalStyle","createGlobalStyle","ALGORITHM_KEY","ALGORITHM_DESC","createContext","algorithm","Main","background","setBackground","setBarNumber","setAlgorithm","useEffect","createTrace","generateRandomArray","min","console","log","floor","random","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9bf42ea.chunk.js","sourcesContent":["\nexport interface Trale {\n  sortedIndices: number[];\n  array: number[];\n  groupA: number[];\n  groupB: number[];\n  groupC: number[];\n  groupD: number[];\n}\n\nexport const newTrale = (array: number[]) => {\n  return [\n    {\n      array: [...array],\n      groupA: [],\n      groupB: [],\n      groupC: [],\n      groupD: [],\n      sortedIndices: []\n    }\n  ];\n};\n\nexport const addToTrale = (\n  trale: Trale[],\n  array: number[],\n  sortedIndices: number[] = [],\n  groupA: number[] = [],\n  groupB: number[] = [],\n  groupC: number[] = [],\n  groupD: number[] = [],\n) => {\n  trale.push({\n    array: [...array],\n    groupA: [...groupA],\n    groupB: [...groupB],\n    groupC: [...groupC],\n    groupD: [...groupD],\n    sortedIndices: [...sortedIndices]\n  });\n};\n\n\nexport const lastSorted = (trale: Trale[] ) => {\n  return trale[trale.length - 1].sortedIndices;\n};\n\nexport const swap = (array: number[], i: number, j: number) => {\n  const tmp = array[i];\n  array[i] = array[j];\n  array[j] = tmp;\n};\n\nexport const createRange = (start: number, end: number) => {\n  return [...Array(end - start).keys()].map((elem) => elem + start);\n};\n\nexport const createKey = (groupA: string | null, groupB: string | null, groupC: string | null, groupD?: string | null) => {\n  return { groupA, groupB, groupC, groupD };\n};\n","import { newTrale, addToTrale, createKey } from '../helpers/utils';\n\nconst InsertionSort = (nums: number[]) => {\n  // Initial State\n  const trale = newTrale(nums);\n\n  // Core Algorithm\n  for (let i = 1; i < nums.length; i++) {\n    let value = nums[i];\n    let hole = i;\n    // Visualize: Hole has been selected for comparison\n    addToTrale(trale, nums, [], [i]);\n    while (hole > 0 && nums[hole - 1] > value) {\n      // Visualize: Compare hole to value\n      addToTrale(trale, nums, [], [hole], [hole - 1]);\n      nums[hole] = nums[hole - 1];\n      hole -= 1;\n      // Visualize: Overwrite hole with hole - 1\n      addToTrale(trale, nums, [], [], [hole, hole + 1]);\n    }\n    // Visualize: Overwrite hole with value\n    addToTrale(trale, nums, [], [], [], [hole]);\n    nums[hole] = value;\n    // Visualize: value is in sorted position\n    addToTrale(trale, nums, [], [], [], [hole]);\n  }\n\n  // Visualize: Mark all elements as sorted\n  addToTrale(trale, nums, [...Array(nums.length).keys()]);\n  return trale;\n};\n\nexport const InsertionSortKey = createKey(\n  'Comparing',\n  'Swapping',\n  'Overwrite from memory'\n);\n\nexport const InsertionSortDesc = {\n  title: 'Insertion Sort',\n  description: (\n    <p>\n      <a\n        href=\"https://en.wikipedia.org/wiki/Insertion_sort\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Insertion Sort\n      </a>{' '}\n      is a simple sorting algorithm that iterates through an array and\n      at each iteration it removes one element from the array, finds the\n      location it belongs to in the sorted list and inserts it there,\n      repeating until no elements remain in the unsorted list. It is an\n      in-place, stable sorting algorithm that is inefficient on large\n      input arrays but works well for data sets that are almost sorted.\n      It is more efficient in practice compared to other quadratic\n      sorting algorithms like bubble sort and selection sort.\n    </p>\n  ),\n  worstCase: (\n    <span>\n      O(n<sup>2</sup>)\n    </span>\n  ),\n  avgCase: (\n    <span>\n      O(n<sup>2</sup>)\n    </span>\n  ),\n  bestCase: <span>O(n)</span>,\n  space: <span>O(1)</span>\n};\n\nexport default InsertionSort;","import { newTrale, addToTrale, createKey, lastSorted, createRange, swap } from '../helpers/utils';\n\n\nconst QuickSort = (nums: number[]) => {\n  // Initial State\n  const trace = newTrale(nums);\n\n  function choosePivot( start: number, end: number) {\n    // randomly pick an element between start and end;\n    return Math.floor(Math.random() * (end - start)) + start;\n  }\n\n  function partition(array: number[], start: number, end: number) {\n    let i = start + 1;\n    let j = start + 1;\n\n    // Visualize: Keep pivot marked\n    addToTrale(trace, array, lastSorted(trace), [start]);\n\n    while (j <= end) {\n      if (array[j] < array[start]) {\n        // Visualize: Mark item that is less than pivot\n        addToTrale(\n          trace,\n          array,\n          lastSorted(trace),\n          [start],\n          [j],\n          [],\n          createRange(start + 1, i)\n        );\n\n        swap(array, i, j);\n\n        // Visualize: Move item to lesser list\n        addToTrale(\n          trace,\n          array,\n          lastSorted(trace),\n          [start],\n          [i],\n          [],\n          createRange(start + 1, i)\n        );\n        i += 1;\n      }\n      j += 1;\n    }\n\n    // Visualize: Mark center position\n    addToTrale(\n      trace,\n      array,\n      lastSorted(trace),\n      [i - 1],\n      [],\n      [],\n      createRange(start, i - 1)\n    );\n    swap(array, start, i - 1);\n\n    // Visualize: Move pivot to center\n    addToTrale(\n      trace,\n      array,\n      lastSorted(trace),\n      [i - 1],\n      [],\n      [],\n      createRange(start, i - 1)\n    );\n    return i - 1;\n  }\n\n  function recursiveQuickSort(array: number[], start: number, end: number) {\n    if (start >= end) {\n      if (start === end) {\n        // Visualize: Mark only item as sorted\n        addToTrale(trace, array, [...lastSorted(trace), start]);\n      }\n      return null;\n    }\n\n    let pivot = choosePivot(start, end);\n\n    // Visualize: Mark chosen pivot\n    addToTrale(trace, array, lastSorted(trace), [pivot]);\n\n    swap(array, start, pivot);\n\n    // Visualize: Move chosen pivot to start\n    addToTrale(trace, array, lastSorted(trace), [pivot]);\n\n    pivot = partition(array, start, end);\n\n    // Visualize: Mark pivot after partition as sorted\n    addToTrale(trace, array, [...lastSorted(trace), pivot]);\n\n    recursiveQuickSort(array, start, pivot - 1);\n    recursiveQuickSort(array, pivot + 1, end);\n  }\n\n  recursiveQuickSort(nums, 0, nums.length - 1);\n\n  return trace;\n};\n\nexport const QuickSortKey = createKey(\n  'Comparing',\n  'Swapping',\n  null,\n  'Less than pivot'\n);\n\nexport const QuickSortDesc = {\n  title: 'Quick Sort',\n  description: (\n    <div>\n      <p>\n        <a\n          href=\"https://en.wikipedia.org/wiki/Quicksort\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Quick Sort\n        </a>{' '}\n        is an efficient, in-place sorting algorith that in practice is\n        faster than MergeSort and HeapSort. However, it is not a stable\n        sorting algorithm, meaning that the relative positioning of\n        equal sort items is not preserved.Quicksort is a divide and\n        conquer algorithm. Quicksort first divides a large array into\n        two smaller sub-arrays: the low elements and the high elements.\n        Quicksort can then recursively sort the sub-arrays. The steps\n        are:\n      </p>\n      <ol>\n        <li>\n          Pick an element, called a pivot, from the array. This is\n          usually done at random.\n        </li>\n        <li>Move pivot element to the start of the array.</li>\n        <li>\n          <em>Partitioning:</em> reorder the array so that all elements\n          with values less than the pivot come before the pivot, while\n          all elements with values greater than the pivot come after it\n          (equal values can go either way). After this partitioning, the\n          pivot is in its final position. This is called the{' '}\n          <em>partition</em> operation.\n        </li>\n        <li>\n          Recursively apply the above steps to the sub-array of elements\n          with smaller values and separately to the sub-array of\n          elements with greater values.\n        </li>\n      </ol>\n      <p>\n        The base case of the recursion is an array of size zero or one,\n        which are sorted by definition.\n      </p>\n    </div>\n  ),\n  worstCase: (\n    <span>\n      O(<em>n</em>\n      <sup>2</sup>)\n    </span>\n  ),\n  avgCase: (\n    <span>\n      O(<em>n</em>log<em>n</em>)\n    </span>\n  ),\n  bestCase: (\n    <span>\n      O(<em>n</em>log<em>n</em>)\n    </span>\n  ),\n  space: (\n    <span>\n      O(log<em>n</em>)\n    </span>\n  )\n};\n\nexport default QuickSort;\n","import baseStyled, { ThemedStyledInterface } from 'styled-components';\nexport interface Fonts { \n  bold: string;\n  regular: string; \n};\n\nexport interface FontSizes {\n  xs: string;\n  sm: string;\n  md: string;\n  body: string;\n  lg: string;\n  xl: string;\n};\n\nexport interface Breakpoints {\n  xs: number;\n  sm: number;\n  md: number;\n  lg: number;\n  xl: number;\n};\n\nexport interface ContainerMaxWidth {\n  xs: number;\n  sm: number;\n  md: number;\n  lg: number;\n  xl: number;\n};\n\nexport interface Colors {\n  white: string;\n  black: string;\n  gray000: string;\n  gray100: string;\n  gray200: string;\n  gray300: string;\n  gray400: string;\n  yello000: string;\n  yellow100: string;\n  yellow200: string;\n  yellow300: string;\n  yello400: string;\n  pink: string;\n  red000: string;\n}\n\nexport interface Padding {\n  tiny: string;\n  mini: string;\n  small: string;\n  default: string;\n  big: string;\n  large: string;\n  huge: string;\n}\n\nexport interface Grid {\n  containerMaxWidth: ContainerMaxWidth;\n  gutterWidth: string;\n  colCount: number;\n}\n\nexport interface LineHeights {\n  h1: string;\n  h2: string;\n  h3: string;\n  h4: string;\n  body: string;\n  body2: string;\n  caption: string;\n}\n  \nexport interface Spacing {\n  [key: number]: string;\n  noSpacing: number;\n  tiny: number;\n  mini: number;\n  small: number;\n  default: number;\n  big: number;\n  large: number;\n  extraLarge: number;\n  huge: number;\n  extraHuge: number;\n}\n\nexport interface Sizes {\n  dwarf: string;\n  tiny: string;\n  small: string;\n  default: string;\n  big: string;\n  large: string;\n  huge: string;\n}\n\nexport interface ThemeColors {\n      primaryBg: string;\n      secondaryBg: string;\n      primaryTxt: string;\n      activeTxt: string;\n      primaryIcons: string;\n}\n\nexport interface BorderRadius {\n  tiny: string;\n  small: string;\n  default: string;\n  big: string;\n  circular: string;\n  rounded: string;\n}\n\nexport interface Margin {\n  tiny: string;\n  small: string;\n  default: string;\n  big: string;\n  large: string;\n  huge: string;\n}\nexport interface ThemeProps {\n  theme: {\n      mode: string;\n      breakpoints: Breakpoints;\n      grid: Grid;\n      spacing: Spacing;\n      padding: Padding;\n      sizes: Sizes;\n      colors: Colors;\n      themeColors: ThemeColors;\n      fontSizes: FontSizes;\n      fonts: Fonts;\n      lineHeights: LineHeights;\n      borderRadius: BorderRadius;\n      margin: Margin;\n  }\n};\n\nexport const breakpoints = {\n  xs: 0,\n  sm: 600,\n  md: 960,\n  lg: 1280,\n  xl: 1920\n};\n\nexport const grid = {\n  containerMaxWidth: {\n    xs: 540,\n    sm: 720,\n    md: 960,\n    lg: 1136,\n    xl: 1236\n  },\n  gutterWidth: '16px',\n  colCount: 12\n};\n\nexport const spacing = {\n  noSpacing: 0,\n  tiny: 2,\n  mini: 4,\n  small: 6,\n  default: 8,\n  big: 16,\n  large: 24,\n  extraLarge: 32,\n  huge: 38,\n  extraHuge: 44\n};\n\nexport const padding = {\n  tiny: '4px',\n  mini: '8px',\n  small: '12px',\n  default: '16px',\n  big: '18px',\n  large: '24px',\n  huge: '44px'\n};\n\nexport const sizes = {\n  dwarf: '16px',\n  tiny: '22px',\n  small: '32px',\n  default: '40px',\n  big: '48px',\n  large: '72px',\n  huge: '128px'\n};\n\nexport const fonts = {\n  regular: '../resources/fonts/SFUIDisplayRegular.otf',\n  bold: '../resources/fonts/SFUIDisplayBold.otf'\n};\n\nexport const fontSizes = {\n  xs: '0.714rem',\n  sm: '0.857rem',\n  md: '1rem',\n  body: '16px',\n  lg: '1.143rem',\n  xl: '1.714rem'\n};\n\nexport const lineHeights = {\n  h1: '56px',\n  h2: '40px',\n  h3: '32px',\n  h4: '24px',\n  body: '24px',\n  body2: '20px',\n  caption: '16px'\n};\n\nexport const borderRadius = {\n  tiny: '2px',\n  small: '4px',\n  default: '6px',\n  big: '8px',\n  circular: '100%',\n  rounded: '100rem'\n};\n\nexport const margin = {\n  tiny: '0.5rem',\n  small: '0.75rem',\n  default: '1rem',\n  big: '1.5rem',\n  large: '2rem',\n  huge: '3rem'\n};\n\nconst lightTheme = {\n  mode: 'light',\n  breakpoints: breakpoints,\n  grid: grid,\n  spacing: spacing,\n  padding: padding,\n  sizes: sizes,\n  colors: {\n    white: '#ffff',\n    black: '#000',\n\n    gray000: '#EAEAEA',\n    gray100: '#E0E0E0',\n    gray200: '#8D8E90',\n    gray300: '#6F7070',\n    gray400: '#707070',\n\n    yello000: '#FFEBAA',\n    yellow100: '#FFDA9E',\n    yellow200: '#FDD28A',\n    yellow300: '#FFBF71',\n    yello400: '#FFB339',\n\n    pink: '#6563FF',\n    red000: '#DD727C'\n  },\n  themeColors: {\n    blackWhite: '#000',\n    whiteBlack: '#fff',\n    primaryBg: '#F4F8FB',\n    secondaryBg: '#fff',\n    primaryTxt: '#707070',\n    primaryTxt2: '#fff',\n    activeTxt: '#0000',\n    primaryIcons: '#000',\n    sidebarBorder: '#000',\n\n    chartRedBorder: 'rgba(235, 86, 86, 1)',\n    chartRedBg: 'rgba(235, 86, 86, 0.1)',\n    chartBg: 'rgba(255, 255, 255, 1)',\n\n    chartBtnBgAct: '#9BA4AE',\n    chartBtnBgDis: '#F0F0F0',\n    chartBtnAct: '#707070',\n    chartBtnDis: '#B7B7B7',\n    chartBtnCol: '#fff',\n\n    toggler: '#FFDA9E',\n    btnBg: 'green'\n  },\n  fontSizes: fontSizes,\n  fonts: fonts,\n  lineHeights: lineHeights,\n  borderRadius: borderRadius,\n  margin: margin\n}; \n\nconst darkTheme = {\n  mode: 'dark',\n  breakpoints: breakpoints,\n  grid: grid,\n  spacing: spacing,\n  padding: padding,\n  sizes: sizes,\n  colors: {\n    white: '#ffff',\n    black: '#000',\n\n    gray000: '#EAEAEA',\n    gray100: '#E0E0E0',\n    gray200: '#8D8E90',\n    gray300: '#6F7070',\n    gray400: '#707070',\n\n    yello000: '#FFEBAA',\n    yellow100: '#FFDA9E',\n    yellow200: '#FDD28A',\n    yellow300: '#FFBF71',\n    yello400: '#FFB339',\n\n    pink: '#6563FF',\n    red000: '#DD727C'\n  },\n  themeColors: {\n    blackWhite: '#fff',\n    whiteBlack: '#000',\n    primaryBg: '#22252A',\n    secondaryBg: '#272B2F',\n    primaryTxt: '#919294',\n    primaryTxt2: '#000',\n    activeTxt: '#FFFFFF',\n    primaryIcons: '#000',\n    sidebarBorder: 'transparent',\n\n    chartRedBorder: 'rgba(235, 86, 86, 1)',\n    chartRedBg: 'rgba(189, 65, 66, 0.2)',\n    chartBg: 'rgba(34, 37, 42, 1)',\n\n    chartBtnBgAct: '#22262B',\n    chartBtnBgDis: '#54575A',\n    chartBtnAct: '#919294',\n    chartBtnDis: '#B7B7B7',\n    chartBtnCol: '#fff',\n\n    toggler: '##7754F8',\n    btnBg: '#305ECA'\n  },\n  fontSizes: fontSizes,\n  fonts: fonts,\n  lineHeights: lineHeights,\n  borderRadius: borderRadius,\n  margin: margin\n}; \n\nexport type Theme = typeof lightTheme;\nexport const styled = baseStyled as ThemedStyledInterface<Theme>;\n\nexport { lightTheme, darkTheme };","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  width: number;\n  val: number;\n  stateA: boolean;\n  stateB: boolean;\n  stateC: boolean;\n  stateD: boolean;\n  sorted: boolean;\n}\n\nconst Bar: FC <Props> = ({ width,val,stateA,stateB,stateC,stateD,sorted }) => {\n\n  const groupManager = () : string => {\n    if (stateA) { return 'stateA'; }\n    if (stateB) { return 'stateB'; }\n    if (stateC) { return 'stateC'; }\n    if (stateD) { return 'stateD'; }\n    if (sorted) { return 'sorted'; }\n    return '';\n  };\n\n  return (\n    <BarContainer state={groupManager()} width={width} height={val} margin={width}>\n      <Text>{width > 4 ? val : null}</Text>\n    </BarContainer>\n  );\n};\n\nexport default Bar;\n\ninterface ContainerProps {\n  width: number;\n  height: number;\n  state: string;\n  margin: number;\n}\n\nconst BarContainer = styled.div<ContainerProps>`\n  display: flex;\n  width: ${(props) => props.width}%;\n  height: ${(props) => props.height * 4}px;\n  align-items: flex-end;\n  transition: 125ms ease-in-out;\n  color: rgb(58, 58, 60);\n  margin: ${\n  ({state, margin}) => (state === 'stateA' || state === 'stateB' || state === 'stateC' || state === 'stateD' ? \n    `0.1rem ${margin * 0.3}%` : '0.1rem 0')\n};\n  margin-right: 0.5rem;\n  justify-content: center;\n  border-radius: 5px;\n  background-color: ${(props) => {\n    switch (props.state) {\n    case 'stateA':\n      return 'blue';\n    case 'stateB':\n      return 'yellow';\n    case 'stateC':\n      return 'red';\n    case 'stateD':\n      return 'black';\n    case 'sorted':\n      return 'green';\n    default:\n      return '#fff';\n    }\n  }};\n  &:first-of-type{\n    margin-left: 0.5rem;\n  }\n`;\n\nconst Text = styled.span `\n  margin: auto 0.25rem;\n  color: #000;\n`;","import { css } from 'styled-components';\nimport { styled } from 'styled/themes';\n\nconst direction = {\n  row: 'row',\n  column: 'column'\n};\n\nconst wrap = {\n  wrap: 'wrap',\n  noWrap: 'no-wrap'\n};\n\nconst justify = {\n  center: 'center',\n  between: 'space-between',\n  around: 'space-around',\n  evenly: 'space-evenly',\n  start: 'flex-start',\n  end: 'flex-end'\n};\n\nconst alignContent = {\n  center: 'center',\n  between: 'space-between',\n  around: 'space-around',\n  evenly: 'space-evenly',\n  start: 'flex-start',\n  end: 'flex-end'\n};\n\nconst align = {\n  center: 'center',\n  start: 'flex-start',\n  end: 'flex-end'\n};\n\ninterface Props {\n  inline?: string;\n  direction?: keyof typeof direction;\n  wrap?: keyof typeof wrap;\n  justify?: keyof typeof justify;\n  alignContent?: keyof typeof alignContent;\n  align?: keyof typeof align;\n  full?: boolean;\n  center?: boolean;\n  width?: string;\n  height?: string;\n  margin?: string;\n  padding?: any;\n  flex?: string;\n  position?: string;\n  hide?: boolean;\n}\n\nconst Flex = styled.div<Props>`\n  display: flex;\n  align-content: stretch;\n  transition: all 0.3s, opacity 0.5s ease;\n  opacity: 1;\n  visibility: visible;\n  position: relative;\n  ${(props) => props.inline\n    && css`\n      display: inline-flex;\n    `};\n  ${(props) => props.direction\n    && css`\n      flex-direction: ${direction[props.direction]};\n    `};\n  ${(props) => props.wrap\n    && css`\n      flex-wrap: ${wrap[props.wrap]};\n    `};\n  ${(props) => props.justify\n    && css`\n      justify-content: ${justify[props.justify]};\n    `};\n  ${(props) => props.alignContent\n    && css`\n      align-content: ${alignContent[props.alignContent]};\n    `};\n  ${(props) => props.align\n    && css`\n      align-items: ${align[props.align]};\n    `};\n  ${(props) => props.full\n    && css`\n      width: 100%;\n      height: 100vh;\n      flex-basis: 100%;\n    `};\n  ${(props) => props.center\n    && css`\n      align-items: center;\n      justify-content: center;\n    `};\n  ${(props) => props.width\n    && css`\n      width: ${props.width};\n    `};\n  ${(props) => props.height\n    && css`\n      height: ${props.height};\n    `};\n  ${(props) => props.padding\n    && css`\n      padding: ${props.padding};\n    `};\n  ${(props) => props.margin\n    && css`\n      margin: ${props.margin};\n    `};\n  ${(props) => props.flex\n    && css`\n      flex: ${props.flex};\n    `};\n  ${(props) => props.position === 'absolute'\n    && css`\n      position: ${props.position};\n      top: 0;\n      left: 0;\n    `};\n  ${(props) => props.hide\n    && css`\n      opacity: 0;\n      visibility: hidden;\n    `};\n`;\n\nexport default Flex;","import Flex from './Flex';\n\nexport default Flex;\n","import React, { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { withTheme } from 'styled-components';\n\nimport { padding, ThemeProps } from 'styled/themes';\n\nimport Bar from './primitives/Bar';\nimport Flex from './primitives/Flex';\n\nconst getListOfBars: Function = (\n  numbers: number[],\n  maxNum:number[],\n  groupA:number[],\n  groupB:number[],\n  groupC:number[],\n  groupD:number[],\n  sortedIndices: number[],\n  trale?:Object[]\n) => {\n  return numbers.map((num: number, i:number) => {\n    let width = 100 / numbers.length;\n    let stateA = groupA.includes(i);\n    let stateB = groupB.includes(i);\n    let stateC = groupC.includes(i);\n    let stateD = groupD.includes(i);\n    let sorted = sortedIndices.includes(i);\n\n    return (\n      <Bar key={`${i}_${num}`} \n        width={width} \n        val={num} \n        stateA={stateA} \n        stateB={stateB} \n        stateC={stateC} \n        stateD={stateD} \n        sorted={sorted} \n      />\n    );\n  });\n};\n\n\ninterface Props extends ThemeProps {\n  numbers: number[];\n  maxNum: number;\n  groupA: number[];\n  groupB: number[];\n  groupC: number[];\n  groupD: number[];\n  sortedIndices: number[];\n  // trale: Object[];\n}\n\nconst Sorter: FC <Props> = ({numbers,maxNum,groupA,groupB,groupC,groupD,sortedIndices, theme}) => {\n  return (\n    <Flex width=\"100%\" height=\"405px\" align='end' padding={[theme.padding.huge, 0]} \n      style={{backgroundColor: theme.colors.gray400, borderRadius: theme.borderRadius.default}}>\n      {getListOfBars(numbers,maxNum,groupA,groupB,groupC,groupD,sortedIndices)}\n    </Flex>\n  );\n};\n\n// Sorter.propTypes = {\n//   numbers: PropTypes.arrayOf(PropTypes.number),\n//   maxNum: PropTypes.number,\n//   groupA: PropTypes.arrayOf(PropTypes.number),\n//   groupB: PropTypes.arrayOf(PropTypes.number),\n//   groupC: PropTypes.arrayOf(PropTypes.number),\n//   groupD: PropTypes.arrayOf(PropTypes.number),\n//   sortedIndices: PropTypes.arrayOf(PropTypes.number)\n// };\n\nexport default withTheme(Sorter);\n\ninterface ContainerProps {\n  bg: string;\n}\n\nconst Container = styled.div<ContainerProps> `\n  width: 100%;\n  height: 40vh;\n  padding: 1rem;\n  display: flex;\n  background-color:${(props) => props.bg};\n  flex-direction: row;\n  align-items: flex-end;\n  transition: 0.75s ease-in-out;\n`;","import React, { FC } from 'react';\nimport './style.css';\n\ninterface Arguments {\n    title: JSX.Element;\n    description: JSX.Element;\n    worstCase: JSX.Element;\n    avgCase: JSX.Element;\n    bestCase: JSX.Element;\n    space: JSX.Element;\n}\n\nconst SortInfo: FC <Arguments> = ({\n  title,\n  description,\n  worstCase,\n  avgCase,\n  bestCase,\n  space\n}) => {\n  return (\n    <div className=\"SortInfo\">\n      <hr />\n\n      <div className=\"SortInfo__Body\">\n        <div className=\"SortInfo__Article\">\n          <h1>{title ? title : 'Select Algorithm'}</h1>\n          <article>\n            {description ? (\n              description\n            ) : (\n              <p>\n              You must select an algorithm before you can visualize it's\n              execution on an array of numbers.\n              </p>\n            )}\n          </article>\n        </div>\n\n        <aside className=\"SortInfo__Aside\">\n          <h3>Performance</h3>\n          <table>\n            <tbody>\n              <tr>\n                <td>Worst-case time complexity</td>\n                <td>\n                  <code>{worstCase}</code>\n                </td>\n              </tr>\n\n              <tr>\n                <td>Average time complexity</td>\n                <td>\n                  <code>{avgCase}</code>\n                </td>\n              </tr>\n\n              <tr>\n                <td>Best-case time complexity</td>\n                <td>\n                  <code>{bestCase}</code>\n                </td>\n              </tr>\n\n              <tr>\n                <td>Worst-case space complexity</td>\n                <td>\n                  <code>{space}</code>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </aside>\n      </div>\n    </div>\n  );\n};\n\nexport default SortInfo;\n","import React, { FC } from 'react';\n\nimport { styled } from 'styled/themes';\n\ninterface Props {\n    groupA: string;\n    groupB: string;\n    groupC: string;\n    groupD: string;\n}\n\nconst ColorsInfo: FC <Props> = ({ groupA, groupB, groupC, groupD }) => {\n\n  const colorA = groupA ? (\n    <StyledKeyItem>\n      <StyledBox group={'groupA'} />\n      <span>{groupA}</span>\n    </StyledKeyItem>\n  ) : null;\n\n  const colorB = groupB ? (\n    <StyledKeyItem>\n      <StyledBox group={'groupB'} />\n      <span>{groupB}</span>\n    </StyledKeyItem>\n  ) : null;\n\n  const colorC = groupC ? (\n    <StyledKeyItem>\n      <StyledBox group={'groupC'} />\n      <span>{groupC}</span>\n    </StyledKeyItem>\n  ) : null;\n\n  const colorD = groupD ? (\n    <StyledKeyItem>\n      <StyledBox group={'groupD'} />\n      <span>{groupD}</span>\n    </StyledKeyItem>\n  ) : null;\n\n  return (\n    <StyledContainer>\n      {colorA}\n      {colorB}\n      {colorC}\n      {colorD}\n    </StyledContainer>\n  );\n};\n\nexport default ColorsInfo;\n\nconst StyledContainer = styled.div `\n    display: flex;\n    flex-flow: row wrap;\n    padding: 1rem;\n    width: 80%;\n    max-width: 1200px;\n    margin: 0 auto;\n    text-align: left;\n`;\n\nconst StyledKeyItem = styled.div `\n    display: inline-flex;\n    align-items: center;\n    margin-right: 4rem;\n    padding: 4px;\n`;\n\ninterface BoxProps {\n    group: string;\n}\nconst StyledBox = styled.div<BoxProps> `\n    flex-shrink: 0;\n    height: 1rem;\n    width: 1rem;\n    margin-right: 0.5rem;\n    background-color: ${({group}) => {\n    switch (group) {\n    case 'groupA':\n      return 'blue';\n    case 'groupB':\n      return 'yellow';\n    case 'groupC':\n      return 'red';\n    case 'groupD':\n      return 'black';\n    case 'sorted':\n      return 'green';\n    default:\n      return '#fff';\n    }\n  }};\n`;","import React, { FC } from 'react';\nimport { styled } from 'styled/themes';\n\ninterface Props {\n    width: number;\n}\n\nconst ProgressBar : FC <Props> = ({width}) => {\n  return (\n    <StyledContainer>\n      <StyledProgress width={width} />\n    </StyledContainer>\n  );\n};\n\nexport default ProgressBar;\n\n\nconst StyledContainer = styled.div `\n  margin: 0.5rem ;\n  width: 100%;\n  height: 0.375rem;\n  border-radius: 4px;\n  overflow: hidden;\n`;\n\ninterface ProgressProps {\n    width: number;\n}\nconst StyledProgress = styled.div<ProgressProps> `\n  height: 100%;\n  border-radius: 4px;\n  overflow: hidden;\n  width: ${(props) => props.width}%;\n  background-color: green;\n  animation-name: primary-translate;\n  animation-duration: 500ms;\n\n  @keyframes primary-translate {\n    0% {\n      transform: translateX(0);\n    }\n  \n    20% {\n      animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\n      transform: translateX(0);\n    }\n  \n    59.15% {\n      animation-timing-function: cubic-bezier(\n        0.302435,\n        0.381352,\n        0.55,\n        0.956352\n      );\n      transform: translateX(83.67142%);\n    }\n  \n    100% {\n      transform: translateX(200.611057%);\n    }\n  }\n`;","import { css } from 'styled-components';\nimport { styled, fontSizes, sizes, borderRadius } from 'styled/themes';\n\ninterface Props {\n    size: keyof typeof sizes;\n    fontSize: keyof typeof fontSizes;\n    borderRadius: keyof typeof borderRadius;\n}\n\nconst StyledContainer = styled.button<Props>`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: ${(props) => props.theme.fontSizes[props.fontSize]};\n  height: ${(props) => props.theme.sizes[props.size]};\n  border-radius: ${(props) => props.theme.borderRadius[props.borderRadius]};\n  background-color: ${(props) => props.theme.themeColors.btnBg};\n  color: ${(props) => props.theme.colors.white};\n  padding: 0 1rem;\n  border: 0;\n  transform: scale(1);\n  cursor: pointer;\n  opacity: 1;\n  transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1),\n    transform 150ms cubic-bezier(0.4, 0, 0.2, 1), opacity\n      150ms cubic-bezier(0.4, 0, 0.2, 1), background-color  500ms cubic-bezier(0.4, 0, 0.2, 1);\n  border: 0;\n  color: #fff;\n  &:hover {\n    opacity: 0.9;\n  }\n  &:active,\n  &:focus {\n    outline: 0;\n  }\n`;\n\nexport { StyledContainer };\n","import Button from './Button';\n\nexport default Button;\n","import React, { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledContainer } from './styled';\nimport { fontSizes, sizes, borderRadius } from 'styled/themes';\n\n\ninterface Props {\n    onClick: any;\n    size: keyof typeof sizes;\n    fontSize: keyof typeof fontSizes;\n    borderRadius: keyof typeof borderRadius;\n    [x:string]: any;\n}\nconst Button: FC <Props> = ({\n  children,\n  size,\n  fluid,\n  onClick,\n  borderRadius,\n  fontSize,\n  ...rest\n}) => {\n\n\n  return (\n    <StyledContainer\n      size={size}\n      borderRadius={borderRadius}\n      fontSize={fontSize}\n      onClick={onClick}\n      {...rest}\n    >\n      <div>{children}</div>\n    </StyledContainer>\n  );\n};\n\n\nexport default Button;\n","import { styled } from 'styled/themes';\n\ninterface Props {\n    width: any;\n}\n\nconst Selector = styled.select<Props>`\n    height: 48px;\n    font-size: 13px;\n    width: ${(props) => props.width};\n    color: ${(props) => props.theme.colors.gray400};\n    background-color: ${(props) => props.theme.themeColors.primaryBg};\n    padding-left: 10px;\n    border: none;\n    transition: all 0.5s ease-in-out;\n    border-bottom: 1px solid ${(props) => props.theme.themeColors.primaryTxt};\n    border-radius: 0.5rem;\n`;\nconst Option = styled.option`\n    padding:0 2px 1px;\n    background-color: #fff;\n    color: #000\n`;\nexport { Selector, Option };\n","import React, { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport { Selector, Option } from './styled';\n\ninterface Props {\n  width: any;\n  options: {value: number | string; label: string}[];\n  isActive?: boolean;\n  onChange: any;\n  defaultValue: any;\n}\n\nconst Select: FC <Props> = ({\n  width, options, isActive = true, onChange, defaultValue, ...props\n}) => {\n  return (\n    <Selector width={width} {...props} onChange={onChange}>\n      {isActive ? options?.map((option: {value: number | string; label: string}) => \n        <Option key={option.value} \n          selected={defaultValue === option.value}\n          value={option.value}\n          defaultValue={option.label === defaultValue ? defaultValue : option.value}\n        >\n          {option.label}</Option>) : <Option>{defaultValue}</Option>}\n    </Selector>\n  );\n};\n\nSelect.propTypes = {\n  isActive: PropTypes.bool.isRequired\n};\n\nSelect.defaultProps = {\n  isActive: true\n};\n\nexport default Select;\n","/* eslint-disable max-len */\nimport React, { FC } from 'react';\nimport { withTheme } from 'styled-components';\n\nimport { ThemeProps } from 'styled/themes';\ninterface Props extends ThemeProps {\n  color?: string;\n  disabled: boolean;\n}\n\nexport const Play: FC <Props> = ({ theme, disabled, color = theme.themeColors.primaryIcons }) => {\n\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\"\n      style={{width: theme.sizes.tiny, maxHeight: 50, fill: disabled ? theme.themeColors.primaryTxt : color, cursor: 'pointer', margin: '1rem'}}>\n      <path d=\"M18.54,9,8.88,3.46a3.42,3.42,0,0,0-5.13,3V17.58A3.42,3.42,0,0,0,7.17,21a3.43,3.43,0,0,0,1.71-.46L18.54,15a3.42,3.42,0,0,0,0-5.92Zm-1,4.19L7.88,18.81a1.44,1.44,0,0,1-1.42,0,1.42,1.42,0,0,1-.71-1.23V6.42a1.42,1.42,0,0,1,.71-1.23A1.51,1.51,0,0,1,7.17,5a1.54,1.54,0,0,1,.71.19l9.66,5.58a1.42,1.42,0,0,1,0,2.46Z\"/>\n    </svg>\n  );\n};\n\nexport default withTheme(Play);\n","/* eslint-disable max-len */\nimport React, { FC } from 'react';\nimport { withTheme } from 'styled-components';\n\nimport { ThemeProps } from 'styled/themes';\ninterface Props extends ThemeProps {\n  color?: string;\n  disabled: boolean;\n}\n\nexport const Pause: FC <Props> = ({ theme, disabled, color = theme.themeColors.primaryIcons }) => {\n\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\"\n      style={{width: theme.sizes.tiny, maxHeight: 50, fill: disabled ? theme.themeColors.primaryTxt : color, cursor: 'pointer', margin: '1rem'}}>\n      <path d=\"M16,2a3,3,0,0,0-3,3V19a3,3,0,0,0,6,0V5A3,3,0,0,0,16,2Zm1,17a1,1,0,0,1-2,0V5a1,1,0,0,1,2,0ZM8,2A3,3,0,0,0,5,5V19a3,3,0,0,0,6,0V5A3,3,0,0,0,8,2ZM9,19a1,1,0,0,1-2,0V5A1,1,0,0,1,9,5Z\"/>\n    </svg>\n  );\n};\n\nexport default withTheme(Pause);\n","/* eslint-disable max-len */\nimport React, { FC } from 'react';\nimport { withTheme } from 'styled-components';\n\nimport { ThemeProps } from 'styled/themes';\ninterface Props extends ThemeProps {\n  color?: string;\n  disabled: boolean;\n}\n\nexport const Forwards: FC <Props> = ({ theme, disabled, color = theme.themeColors.primaryIcons }) => {\n\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" \n      style={{width: theme.sizes.tiny, maxHeight: 50, fill: disabled ? theme.themeColors.primaryTxt : color, cursor: 'pointer', margin: '1rem'}}>\n      <path d=\"M19,3a3,3,0,0,0-3,3V8.84L7,3.47a3.21,3.21,0,0,0-3.29,0A3.38,3.38,0,0,0,2,6.42V17.58a3.38,3.38,0,0,0,1.72,3A3.24,3.24,0,0,0,5.33,21,3.28,3.28,0,0,0,7,20.53l9-5.37V18a3,3,0,0,0,6,0V6A3,3,0,0,0,19,3ZM15.32,13.23,6,18.81a1.23,1.23,0,0,1-1.28,0A1.4,1.4,0,0,1,4,17.58V6.42a1.4,1.4,0,0,1,.71-1.25A1.29,1.29,0,0,1,5.33,5,1.23,1.23,0,0,1,6,5.19l9.33,5.58a1.45,1.45,0,0,1,0,2.46ZM20,18a1,1,0,0,1-2,0V6a1,1,0,0,1,2,0Z\"/>\n    </svg>\n  );\n};\n\nexport default withTheme(Forwards);\n","/* eslint-disable max-len */\nimport React, { FC } from 'react';\nimport { withTheme } from 'styled-components';\n\nimport { ThemeProps } from 'styled/themes';\ninterface Props extends ThemeProps {\n  color?: string;\n  disabled: boolean;\n}\n\nexport const Backwards: FC <Props> = ({ theme, disabled, color = theme.themeColors.primaryIcons }) => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" \n      style={{width: theme.sizes.tiny, maxHeight: 50, fill: disabled ? theme.themeColors.primaryTxt : color, cursor: 'pointer', margin: '1rem'}}>\n      <path d=\"M20.28,3.43a3.23,3.23,0,0,0-3.29,0L8,8.84V6A3,3,0,0,0,2,6V18a3,3,0,0,0,6,0V15.16l9,5.37a3.28,3.28,0,0,0,1.68.47,3.24,3.24,0,0,0,1.61-.43,3.38,3.38,0,0,0,1.72-3V6.42A3.38,3.38,0,0,0,20.28,3.43ZM6,18a1,1,0,0,1-2,0V6A1,1,0,0,1,6,6Zm14-.42a1.4,1.4,0,0,1-.71,1.25,1.23,1.23,0,0,1-1.28,0L8.68,13.23a1.45,1.45,0,0,1,0-2.46L18,5.19A1.23,1.23,0,0,1,18.67,5a1.29,1.29,0,0,1,.62.17A1.4,1.4,0,0,1,20,6.42Z\"/>\n    </svg>\n  );\n};\n\nexport default withTheme(Backwards);\n","import styled from 'styled-components';\n\nconst StyledContainer = styled.span`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  padding: 1px 0;\n`;\nexport { StyledContainer };\n","import { useState, FC } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StyledContainer } from './styled';\nimport * as icons from './index';\nimport { ThemeProps } from 'styled/themes';\n\ninterface IconProps extends ThemeProps {\n    name?: keyof typeof icons;\n    onClick?: ((event: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void);\n    activeColor?: string;\n    defaultColor?: string;\n    [x:string]: any;\n    disabled?: boolean;\n}\n\nconst IconItem: FC <IconProps> = ({\n  name, onClick, disabled = false, activeColor = '#444546', defaultColor, theme, ...rest\n}) => {\n  const Icon = name ? icons[name] : () => null;\n  const [isHovered, setIsHovered] = useState(false);\n\n  return (\n    <StyledContainer \n      onClick={onClick} onMouseEnter={() => setIsHovered(true)} onMouseLeave={() => setIsHovered(false)} {...rest}>\n      <Icon disabled={disabled} theme={theme} color={isHovered ? activeColor : defaultColor} />\n    </StyledContainer>\n  );\n};\n\nIconItem.propTypes = {\n  defaultColor: PropTypes.string,\n  activeColor: PropTypes.string,\n  name: PropTypes.any,\n  onClick: PropTypes.func\n};\n\nexport default IconItem;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { withTheme } from 'styled-components';\n// Sub components\nimport Sorter from './Sorter';\nimport SortInfo from './SortInfo';\nimport ColorsInfo from './Colors';\nimport ProgressBar from 'components/ProgressBar';\nimport { StateContext } from 'Main';\nimport { ThemeProps } from 'styled/themes';\nimport { Trale } from 'helpers/utils';\nimport Flex from 'components/primitives/Flex';\nimport Button from 'components/primitives/Button';\nimport Select from 'components/primitives/Select';\nimport { IconItem } from 'components/primitives/Icons';\n\ninterface Props extends ThemeProps{\n  array: number[];\n  trale: Trale[];\n  setTheme: Function;\n  generateNewArray: () => void;\n}\n\ninterface State {\n  trale: Trale[];\n  traleStep: number;\n  sortedIndices: number[];\n  originalArray: number[];\n  array: number[];\n  groupA: number[];\n  groupB: number[];\n  groupC: number[];\n  groupD: number[];\n  playbackSpeed: number;\n  timeouts: number[];\n}\n\nconst BAR_NUMBERSS = [\n  {label: '10', value: 10},\n  {label: '25', value: 25},\n  {label: '50', value: 50},\n  {label: '75', value: 75},\n  {label: '100', value: 100}\n];\n\nconst SPEED = [\n  {label: 'x0.25', value: 0.25},\n  {label: 'x0.5', value: 0.5},\n  {label: 'x1', value: 1},\n  {label: 'x2', value: 2},\n  {label: 'x4', value: 4},\n  {label: 'x10', value: 10}\n];\n\nconst ALGORITHMS = [\n  {label: 'Insertion Sort', value: 'Insertion Sort'},\n  {label: 'Quick Sort', value: 'Quick Sort'}\n];\n\nclass SortController extends Component<Props, State> {\n  constructor(props: Props){\n    super(props);\n    this.state = {\n      trale: [],\n      traleStep: -1,\n  \n      originalArray: [],\n      array: [],\n      groupA: [],\n      groupB: [],\n      groupC: [],\n      groupD: [],\n      sortedIndices: [],\n  \n      playbackSpeed: 1,\n      timeouts: []\n    };\n  }\n\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.array !== this.props.array) {\n      this.randomizeArray(this.props.array);\n    }\n    if (prevProps.trale !== this.props.trale) {\n      this.setState({ trale: this.props.trale });\n    }\n  }\n\n\n  randomizeArray = (array: number[]) => {\n    this.setState({\n      array,\n      trale: [],\n      traleStep: -1,\n      groupA: [],\n      groupB: [],\n      groupC: [],\n      groupD: [],\n      sortedIndices: [],\n      originalArray: [...array]\n    });\n  };\n\n\n  animate = (currentState: Trale): (() => void) | undefined => {\n    const { array, groupA, groupB, groupC, groupD, sortedIndices } = currentState;\n    this.setState({\n      array: array,\n      groupA: groupA,\n      groupB: groupB,\n      groupC: groupC,\n      groupD: groupD,\n      sortedIndices: sortedIndices\n    });\n    return undefined;\n  };\n\n  clearTimeouts = () => {\n    this.state.timeouts.forEach((timeout) =>\n      clearTimeout(timeout)\n    );\n    this.setState({ timeouts: [] });\n  };\n\n  run = (trale: Trale[]) => {\n    const timer = 250 / this.state.playbackSpeed;\n    trale.forEach((item, i) => {\n      let timeout = setTimeout(\n        (item: Trale) => {\n          this.setState(\n            (prevState) => ({\n              traleStep: prevState.traleStep + 1\n            }),\n            this.animate(item)\n          );\n        },\n        i * timer,\n        item\n      );\n      this.setState((prevState) => ({\n        timeouts: [...prevState.timeouts, timeout]\n      }));\n    });\n  };\n\n  pause = () => {\n    this.clearTimeouts();\n  };\n\n  continue = () => {\n    const trale = this.state.trale.slice(this.state.traleStep);\n    this.run(trale);\n  };\n\n  stepForward = () => {\n    const trale = this.state.trale;\n    const step = this.state.traleStep;\n    const timeouts = this.state.timeouts;\n    if (step < trale.length - 1 && !(timeouts.length > 0)) {\n      const item = trale[step + 1];\n      this.setState(\n        { traleStep: step + 1 },\n        this.animate(item)\n      );\n    }\n  };\n\n  stepBackward = () => {\n    const trale = this.state.trale;\n    const step = this.state.traleStep;\n    const timeouts = this.state.timeouts;\n    if (step > 0 && !(timeouts.length > 0)) {\n      const item = trale[step - 1];\n      this.setState(\n        { traleStep: step - 1 },\n        this.animate(item)\n      );\n    }\n  };\n\n  handleSpeedChange = (playbackSpeed: number) => {\n    const sorting = this.state.timeouts.length > 0;\n    this.pause();\n    this.setState({ playbackSpeed }, () => {\n      if (sorting) {this.continue();}\n    });\n  };\n\n  handleClick = () => {\n    const { timeouts, trale, traleStep } = this.state;\n    if (timeouts.length > 0){\n      return this.pause();\n    }\n    if(traleStep > -1) {\n      return this.continue();\n    }\n    return this.run(trale);\n  }\n\n\n\n  render() {\n    const { array, groupA, groupB, groupC, groupD, sortedIndices, timeouts, trale, traleStep } = this.state;\n    const { theme, setTheme, generateNewArray } = this.props;\n    const sorting = timeouts.length > 0 && traleStep < trale.length;\n    const startedProgress = trale.length > 0 && traleStep > 0;\n    const moveForwardDisabled = traleStep >= trale.length - 1 || sorting;\n    const moveBackwardDisabled = traleStep <= 0 || sorting;\n    return (\n      <StateContext.Consumer>\n        {\n          (context) => \n            <Container>\n              <Sorter\n                numbers={array}\n                maxNum={Math.max(...array)}\n                groupA={groupA}\n                groupB={groupB}\n                groupC={groupC}\n                groupD={groupD}\n                sortedIndices={sortedIndices}\n              />\n              <ProgressBar\n                width={\n                  startedProgress\n                    ? (traleStep /\n                        (trale.length - 1)) *\n                      100\n                    : 0\n                }\n              />\n              <Flex justify=\"between\">\n                <IconItem disabled={moveBackwardDisabled} name=\"Backwards\" theme={theme} \n                  onClick={() => this.stepBackward()} />\n                <IconItem name={sorting ? 'Pause' : 'Play'} theme={theme} onClick={() => this.handleClick()} /> \n                <IconItem disabled={moveForwardDisabled} name=\"Forwards\" theme={theme} \n                  onClick={this.stepForward} />\n              </Flex>\n              <div style={{display: 'flex'}}>\n                <div style={{display: 'flex', flexDirection: 'column'}}>\n                  <p />\n                  <Button fluid size=\"default\" fontSize=\"body\" borderRadius=\"default\" \n                    onClick={() => generateNewArray()} style={{marginRight: '2rem'}}>New Array</Button>\n                </div>\n                <div style={{display: 'flex', flexDirection: 'column', marginRight: '2rem', alignItems: 'center'}}>\n                  <p>Choose Sorting Algorithm</p>\n                  <Select options={ALGORITHMS} \n                    onChange={(e: any) => context.changeAlgorithm((e.target.value))} \n                    width=\"8rem\" defaultValue={context.barNumber} />\n                </div>\n                <div style={{display: 'flex', flexDirection: 'column', marginRight: '2rem', alignItems: 'center'}}>\n                  <p>Choose Bar Numbers</p>\n                  <Select options={BAR_NUMBERSS} \n                    onChange={(e: any) => context.handleBarChange(Number(e.target.value))} \n                    width=\"5rem\" defaultValue={context.barNumber} />\n                </div>\n                <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n                  <p>Choose Sorting Speed</p>\n                  <Select options={SPEED} \n                    onChange={(e: any) => this.handleSpeedChange(Number(e.target.value))} \n                    width=\"5rem\" defaultValue={this.state.playbackSpeed} />\n                </div>\n              </div>\n              <Button fluid size=\"default\" fontSize=\"body\" borderRadius=\"rounded\" onClick={() => setTheme()} \n                style={{position: 'absolute', top: 0, right: 0, margin: '1.5rem'}}>\n            Dark Mode {context.theme === 'dark' ? 'On' : 'Off'}\n              </Button>\n              <ColorsInfo {...context.colors} />\n              <SortInfo {...context.description} />\n            </Container>\n        }\n      </StateContext.Consumer>\n    );\n  }\n}\n\nexport default withTheme(SortController);\n\nconst Container = styled.div `\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;","import { createGlobalStyle } from 'styled-components';\nimport { ThemeProps } from './themes';\n\nconst GlobalStyle = createGlobalStyle`\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: ${(props: ThemeProps) => props.theme.fonts.regular};\n    font-size: ${(props: ThemeProps) => props.theme.fontSizes.body};\n    line-height: ${(props: ThemeProps) => props.theme.lineHeights.body};;\n    color: ${(props: ThemeProps) => props.theme.colors.gray400};\n    margin: 0;\n    padding: 0;\n  }\n\n  input,\n  button,\n  textarea,\n  select {\n\n    &:focus {\n      outline: 0;\n    }\n  }\n  p {\n    margin: 0;\n  }\n  h1,h2,h3,h4,h5{\n    margin: 0;\n  }\n\n  input, textarea {\n    font-family: ${(props: ThemeProps) => props.theme.fonts.regular};\n  }\n\n  a {\n    text-decoration: none;\n\n    &:hover {\n      color: #000;\n    }\n\n    &.active {\n      color: ${(props: ThemeProps) => props.theme.colors.pink};\n    }\n  }\n\n\n`;\n\nexport default GlobalStyle;\n","import React, { FC, useState, createContext } from 'react';\nimport InsertionSort, { \n  InsertionSortKey,\n  InsertionSortDesc } \n  from './algorithms/InsertionSort';\nimport QuickSort, { \n  QuickSortKey,\n  QuickSortDesc } \n  from './algorithms/QuickSort';\nimport { ThemeProvider } from 'styled-components';\n\nimport { lightTheme, darkTheme, ThemeProps } from './styled/themes';\nimport SortController from './components/SortController';\nimport GlobalStyle from './styled/global';\nimport Flex from './components/primitives/Flex';\nimport { useEffect } from 'react';\nimport { Trale } from './helpers/utils';\n\nconst ALGORITHM = {\n  'Insertion Sort': InsertionSort,\n  'Quick Sort': QuickSort\n};\n\nconst ALGORITHM_KEY = {\n  'Insertion Sort': InsertionSortKey,\n  'Quick Sort': QuickSortKey\n};\n\nconst ALGORITHM_DESC = {\n  'Insertion Sort': InsertionSortDesc,\n  'Quick Sort': QuickSortDesc\n};\ninterface State {\n  array: number[];\n  trale: Trale[];\n}\n\n\ninterface ContextProps {\n  algorithm: keyof typeof ALGORITHM;\n  array: number[];\n  trale: Trale[];\n  description: any;\n  colors: any;\n  changeAlgorithm: any;\n  barNumber: number;\n  handleBarChange: any;\n  theme: string;\n};\n\nexport const StateContext = createContext<ContextProps>(\n  {algorithm: 'Insertion Sort', array: [], trale: [], description: null, colors: null, changeAlgorithm: null,\n    barNumber: 10, handleBarChange: null, theme: lightTheme.mode}\n);\n\nconst Main: FC = () => {\n\n  const [theme, setTheme] = useState(lightTheme);\n  \n  const [state, setState] = useState<State> ({array: [], trale: []});\n  const [background, setBackground] = useState(theme.themeColors.primaryBg);\n  const [barNumber, setBarNumber] = useState(10);\n  const [algorithm, setAlgorithm] = useState<keyof typeof ALGORITHM>('Insertion Sort');\n\n  \n  useEffect(() => {\n    createTrace();\n  }, [state.array]);\n\n  useEffect(() => {\n    setBackground(theme.themeColors.primaryBg);\n  }, [theme]);\n\n  useEffect(() => {\n    generateRandomArray();\n  }, []);\n  \n  useEffect(() => {\n    generateRandomArray();\n  }, [barNumber]);\n\n  const handleBarChange = (num: number) => {\n    setBarNumber(num);\n  };\n\n  const getRandomInt = (min: number, max: number) => {\n    return Math.floor(Math.random() * (max - min) + min);\n  };\n\n  const changeTheme = () => {\n    if(theme === lightTheme) {setTheme(darkTheme);}\n    if(theme === darkTheme) {setTheme(lightTheme);}\n  };\n\n  const generateRandomArray = () => {\n    const array = [];\n    console.log('new', typeof barNumber);\n    for(let i = 0; i < barNumber; i++){\n      array.push(getRandomInt(5, 100));\n    }\n\n    setState({array,trale: []});\n  };\n\n  const createTrace = () => {\n    const numbers = [...state.array];\n    const trale = InsertionSort(numbers);\n    setState({ ...state, trale });\n  };\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <StateContext.Provider \n        value={{algorithm: 'Insertion Sort', array: state.array, trale: state.trale, \n          changeAlgorithm: setAlgorithm, barNumber, handleBarChange, theme: theme.mode,\n          description: ALGORITHM_DESC[algorithm], colors: ALGORITHM_KEY[algorithm]}}>\n        <Flex direction=\"column\" full style={{backgroundColor: background, padding: 30}}>\n          <GlobalStyle />\n          <SortController \n            array={state.array} generateNewArray={generateRandomArray} trale={state.trale} setTheme={changeTheme} />\n        </Flex>\n      </StateContext.Provider>\n    </ThemeProvider>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}